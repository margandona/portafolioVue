rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Permitir acceso autenticado a los usuarios
    match /users/{userId} {
      allow read: if request.auth != null && 
                    (request.auth.uid == userId || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow write: if request.auth != null && 
                     (request.auth.uid == userId || 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Reglas para cursos
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' || 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update, delete: if request.auth != null && 
                             (resource.data.teacherId == request.auth.uid || 
                              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Reglas para inscripciones
    match /enrollments/{enrollmentId} {
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || 
                     get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.teacherId == request.auth.uid || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                             (resource.data.userId == request.auth.uid || 
                              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Reglas para evaluaciones
    match /evaluations/{evaluationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                      (get(/databases/$(database)/documents/courses/$(request.resource.data.courseId)).data.teacherId == request.auth.uid || 
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update, delete: if request.auth != null && 
                             (get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.teacherId == request.auth.uid || 
                              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Reglas para respuestas
    match /responses/{responseId} {
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || 
                     get(/databases/$(database)/documents/evaluations/$(resource.data.evaluationId)).data.courseId == 
                     get(/databases/$(database)/documents/courses/$(get(/databases/$(database)/documents/evaluations/$(resource.data.evaluationId)).data.courseId)).id &&
                     get(/databases/$(database)/documents/courses/$(get(/databases/$(database)/documents/evaluations/$(resource.data.evaluationId)).data.courseId)).data.teacherId == request.auth.uid || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update, delete: if false; // No permitir actualizaciones o eliminaciones
    }
  }
}
